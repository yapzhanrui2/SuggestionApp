@page "/Create"
@attribute [Authorize]
@using SuggestionAppUI.Models
@using SuggestionAppUI.Components
@inject ICategoryData categoryData
@inject AuthenticationStateProvider authProvider
@inject ISuggestionData suggestionData
@inject IUserData userData
@inject NavigationManager navManager

<h1 class="page-heading text-uppercase mb-4">Make A Suggestion</h1>

<div class="row justify-content-center create-form">
    <div class="col-xl-8 col-lg-10 form-layout">
        <div class="close-button-section">
            <button class="btn btn-close" @onclick="ClosePage"></button>
        </div>
        @if(categories is not null)
        {
            <EditForm Model="suggestion" OnValidSubmit="CreateSuggestion">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="input-section">
                    <label class="form-label fw-bold text-uppercase" for="suggestion-text">Suggestion</label>
                    <div class="input-description">Focus on the topic or technology you want to learn about.</div>
                    <InputText class="form-control" id="suggestion-text" @bind-Value="suggestion.Suggestion" />
                </div>

                <div class="input-section">
                    <label class="form-label fw-bold text-uppercase" for="category">Category</label>
                    <div class="input-description">Choose one category.</div>
                    <div class="col-lg-8">
                        <MyInputRadioGroup id="category" @bind-Value="suggestion.CategoryID">
                            @foreach (var c in categories)
                            {
                                <div class="radio-item-group">
                                    <InputRadio Value="@c.Id" id="@c.Id" />
                                    <label for="@c.Id">@c.CategoryName - @c.CategoryDescription</label>
                                </div>
                            }
                        </MyInputRadioGroup>
                    </div>
                </div>

                <div class="input-section">
                    <label class="form-label fw-bold text-uppercase" for="description">Description</label>
                    <div class="input-description">Briefly describe your suggestion.</div>
                    <InputTextArea class="form-control" id="description" @bind-Value="suggestion.Description" />
                </div>

                <div class="center-children">
                    <button class="btn btn-main btn-lg text-uppercase" type="submit">Suggest</button>
                </div>

            </EditForm>
        }
    </div>
</div>

@code {
    private CreateSuggestionModel suggestion = new();
    private List<CategoryModel> categories;
    private UserModel loggedInUser;

    protected async override Task OnInitializedAsync()
    {
        categories = await categoryData.GetAllCategories();

        loggedInUser = await authProvider.GetUserFromAuth(userData);
    }

    private void ClosePage()
    {
        navManager.NavigateTo("/");
    }

    private async Task CreateSuggestion()
    {
        SuggestionModel s = new();
        s.Suggestion = suggestion.Suggestion;
        s.Description = suggestion.Description;
        s.Author = new BasicUserModel(loggedInUser);
        s.Category = categories.Where(c => c.Id == suggestion.CategoryID).FirstOrDefault();

        if(s.Category is null)
        {
            suggestion.CategoryID = "";
            return;
        }

        await suggestionData.CreateSuggestion(s);
        suggestion = new();
        ClosePage();
    }
}
